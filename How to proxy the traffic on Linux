# The Why

It’s hard for users in certain areas to access some specific networking services, such as Github, repository sources, Docker Hub and so on.

# The What

You can use Trojan-GFW and Proxychains to handle all your traffic, including yum, wget and Docker command

# The How

## 1. Obtain the subscription link

Make sure you have the correct subscription link provided by your service provider, such as Flower Cloud.

## 2. Install Trojan-GFW and configure it

First , install Trojan-GFW on your system. Trojan-GFW is an unidentifiable mechanism that helps you bypass GFW.

You can download it from https://github.com/trojan-gfw/trojan/releases/tag/v1.16.0

## 3. Download Subscription Configurations

Trojan-GFW does not natively support subscription links directly within its configuration file, but you can use third-party tools to parse the subscription link and generate the configuration files.

You can use tools like [clash](https://github.com/Dreamacro/clash) (cross-platform) to parse the subscription link and get a config file which includes content as same as the following:

```
{name: IEP 1, server: shda.fc-sigawa.xyz, port: 10178, type: trojan, password: xxxxxx, sni: m.test.com, skip-cert-verify: true, udp: true}

```

## 4. Configure Trojan-GFW Manually

Once you have the node configurations, you can manually configure config.json for Trojan-GFW.

```json
{
  "run_type": "client",
  "local_addr": "0.0.0.0",
  "local_port": 1080,
  "remote_addr": "your-remote-server-address",
  "remote_port": "your-remote-server-port",
  "password": [
    "your-password"
  ],
  "ssl": {
    "verify": false,              // It's recommended to close the SSL verification.
    "verify_hostname": false
    "cert": "",
    "cipher": "TLS_AES_128_GCM_SHA256",
    "sni": "your-sni",
    "alpn": [
      "http/1.1"
    ]
  }
}
```

It’s worth noting that, if you want to run Trojan within a Docker container, the field `local_addr` should be 0.0.0.0 rather than 127.0.0.1, because Docker’s `-p` option maps a port on the host to a port inside the container, and  if the service inside the container is only listening on 127.0.0.1, Docker’s port mapping can’t redirect external traffic (from the host) to that service. This is because the traffic is coming from an external source and trying to reach the loopback interface, which doesn’t naturally accept connections from outside the container. By switching the bind address to 0.0.0.0, Trojan accepted connections from any interface, including the one Docker uses to forward the host traffic into the container.

## 5. Run Trojan-GFW

You can run Trojan-GFW on the host directly:

```bash
./trojan -c /path/to/your/config.json
```

Or run it within a Docker container:

```
FROM harbor.ops.qianxin-inc.cn/library/centos:7.9.2009.v5-10

WORKDIR /usr/bin

COPY ./trojan /usr/bin/trojan
COPY ./config.json /usr/bin/config.json

RUN chmod 777 /usr/bin/trojan
RUN chmod 777 /usr/bin/config.json

ENV TZ=Asia/Shanghai

ENTRYPOINT ["/usr/bin/trojan"]

CMD ["-c", "/usr/bin/config.json"]
```

```
docker build -t my-trojan-gfw .

docker run --name trojan-container -v /home/guanliming/trojan/config.json:/app/config.json -p 1080:1080 -d my-trojan-gfw
```

## 6. Testing

You can use curl with the --socks5 option to specify the proxy. By default, Trojan listens on 127.0.0.1:1080 for SOCKS5 proxy connections.

```bash
curl --socks5-hostname 127.0.0.1:1080 https://www.youtube.com   # socks5-hostname option ensures that DNS resolution is handled by the proxy, which can often resolve issues related to SSL/TLS and connectivity.
```

You can also proxy the traffic of yum, wget and other commands. Prepend proxychains4 to your yum command to route it through the proxy.

Install proxychain4

```bash
$ sudo yum install proxychains-ng
```

**Configure proxychains**:

Edit the proxychains configuration file /etc/proxychains.conf to use your SOCKS5 proxy.

```bash
sudo vim /etc/proxychains.conf
```

Go to last line, replace this line

```bash
socks4  127.0.0.1 9050
```

to this

```bash
socks5 127.0.0.1 1080
```

**Use proxychains with yum**:

```bash
sudo proxychains4 yum install <package_name>

sudo proxychains4 wget <URL>
```

Besides, if you want to proxy docker command such as docker pull: 

```
# Create systemctl configuration directory.
$ mkdir -p /etc/systemd/system/docker.service.d

# Create configuration.
$ vim /etc/systemd/system/docker.service.d/http-proxy.conf

# Add and save the following content.
[Service]
Environment="HTTP_PROXY=socks5://localhost:1080"         # localhost也可以替换具体提供代理服务的ip
Environment="HTTPS_PROXY=socks5://localhost:1080"
Environment="NO_PROXY=localhost,127.0.0.1,docker-registry.example.com,.corp"

# Restart docker.
$ systemctl daemon-reload
$ systemctl restart docker

$ docker info | grep Proxy
HTTP Proxy: http://proxy.example.com:80
HTTPS Proxy: https://proxy.example.com:443
No Proxy: localhost,127.0.0.1,docker-registry.example.com,.corp
 
# Download any docker image you want.
proxychains4 docker pull xxx
```

# Summary

While Trojan-GFW does not support subscription links directly, you can use tools like v2rayN or Clash to parse the subscription link and generate configuration files. Then, you can manually configure Trojan-GFW with the appropriate server details.
